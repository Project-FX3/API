package dam.fx3.modelo.entities;
// Generated 3 may 2024 1:08:40 by Hibernate Tools 4.3.6.Final

import java.io.Serial;
import java.math.BigDecimal;
import java.util.Date;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.Setter;


/**
 * Gp generated by hbm2java
 */

@Setter
@Entity
@Table(name = "gp", catalog = "fx3")
public class Gp implements java.io.Serializable {

	@Serial
	private static final long serialVersionUID = 1L;
	private int id;
	private String url;
	private String circuitname;
	private BigDecimal lat;
	private BigDecimal longitude;
	private String locality;
	private String country;
	private String racename;
	private Date racedate;
	private Date racetime;
	private Date firstpracticedate;
	private Date firstpracticetime;
	private Date secondpracticedate;
	private Date secondpracticetime;
	private Date thirdpracticedate;
	private Date thirdpracticetime;
	private Date qualifyingdate;
	private Date qualifyingtime;
	private Date sprintdate;
	private Date sprinttime;
	private Boolean processed;

	public Gp() {
	}

	public Gp(int id) {
		this.id = id;
	}

	public Gp(int id, String url, String circuitname, BigDecimal lat, BigDecimal longitude, String locality,
			String country, String racename, Date racedate, Date racetime, Date firstpracticedate,
			Date firstpracticetime, Date secondpracticedate, Date secondpracticetime, Date thirdpracticedate,
			Date thirdpracticetime, Date qualifyingdate, Date qualifyingtime, Date sprintdate, Date sprinttime, Boolean processed) {
		this.id = id;
		this.url = url;
		this.circuitname = circuitname;
		this.lat = lat;
		this.longitude = longitude;
		this.locality = locality;
		this.country = country;
		this.racename = racename;
		this.racedate = racedate;
		this.racetime = racetime;
		this.firstpracticedate = firstpracticedate;
		this.firstpracticetime = firstpracticetime;
		this.secondpracticedate = secondpracticedate;
		this.secondpracticetime = secondpracticetime;
		this.thirdpracticedate = thirdpracticedate;
		this.thirdpracticetime = thirdpracticetime;
		this.qualifyingdate = qualifyingdate;
		this.qualifyingtime = qualifyingtime;
		this.sprintdate = sprintdate;
		this.sprinttime = sprinttime;
		this.processed = processed;
	}
	
	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	@Column(name = "url")
	public String getUrl() {
		return this.url;
	}

	@Column(name = "circuitname")
	public String getCircuitname() {
		return this.circuitname;
	}

	@Column(name = "lat", precision = 10, scale = 7)
	public BigDecimal getLat() {
		return this.lat;
	}

	@Column(name = "longitude", precision = 10, scale = 7)
	public BigDecimal getLongitude() {
		return this.longitude;
	}

	@Column(name = "locality")
	public String getLocality() {
		return this.locality;
	}

	@Column(name = "country")
	public String getCountry() {
		return this.country;
	}

	@Column(name = "racename")
	public String getRacename() {
		return this.racename;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "racedate", length = 10)
	public Date getRacedate() {
		return this.racedate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "racetime", length = 10)
	public Date getRacetime() {
		return this.racetime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "firstpracticedate", length = 10)
	public Date getFirstpracticedate() {
		return this.firstpracticedate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "firstpracticetime", length = 10)
	public Date getFirstpracticetime() {
		return this.firstpracticetime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "secondpracticedate", length = 10)
	public Date getSecondpracticedate() {
		return this.secondpracticedate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "secondpracticetime", length = 10)
	public Date getSecondpracticetime() {
		return this.secondpracticetime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "thirdpracticedate", length = 10)
	public Date getThirdpracticedate() {
		return this.thirdpracticedate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "thirdpracticetime", length = 10)
	public Date getThirdpracticetime() {
		return this.thirdpracticetime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "qualifyingdate", length = 10)
	public Date getQualifyingdate() {
		return this.qualifyingdate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "qualifyingtime", length = 10)
	public Date getQualifyingtime() {
		return this.qualifyingtime;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "sprintdate", length = 10)
	public Date getSprintdate() {
		return this.sprintdate;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "sprinttime", length = 10)
	public Date getSprinttime() {
		return this.sprinttime;
	}

	@Column(name = "processed")
	public Boolean getProcessed() {
		return this.processed;
	}

}
